
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/demo_colibri.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_demo_colibri.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_demo_colibri.py:


Demo Colibri.
===================================================

In this example we show how to use a simple pipeline of end-to-end learning with the CASSI and SPC forward models. Mainly, the forward model is defined,

.. math::
    \mathbf{y} = \mathbf{H}_\phi \mathbf{x}

where :math:`\mathbf{H}` is the forward model, :math:`\mathbf{x}` is the input image and :math:`\mathbf{y}` is the measurement and :math:`\phi` are the coding elements of the forward model. The recovery model is defined as,

.. math::
    \mathbf{x} = \mathcal{G}_\theta( \mathbf{y})

where :math:`\mathcal{G}` is the recovery model and :math:`\theta` are the parameters of the recovery model.

The training is performed by minimizing the following loss function,

.. math::
    \{\phi^*,\theta^*\} = \arg \min_{\phi,\theta} \sum_{p=1}^{P}\mathcal{L}(\mathbf{x}_p, \mathcal{G}_\theta( \mathbf{H}_\phi \mathbf{x}_p)) + \lambda \mathcal{R}(\phi) + \mu \mathcal{R}(\mathbf{H}_\phi \mathbf{x}) 

where :math:`\mathcal{L}` is the loss function, :math:`\mathcal{R}` is the regularizer, :math:`\lambda` and :math:`\mu` are the regularization weights, and :math:`P` is the number of samples in the training dataset.

.. GENERATED FROM PYTHON SOURCE LINES 29-31

Select Working Directory and Device
-----------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 31-50

.. code-block:: Python

    import os 
    os.chdir(os.path.dirname(os.getcwd()))
    print("Current Working Directory " , os.getcwd())

    #General imports
    import matplotlib.pyplot as plt
    import torch
    import os

    manual_device = "cpu"
    # Check GPU support
    print("GPU support: ", torch.cuda.is_available())

    if manual_device:
        device = manual_device
    else:
        device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Current Working Directory  /home/runner/work/pycolibri/pycolibri
    GPU support:  False




.. GENERATED FROM PYTHON SOURCE LINES 51-53

Load dataset
-----------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 53-62

.. code-block:: Python

    from colibri.data.datasets import Dataset

    dataset_path = 'cifar10'
    keys = ''
    batch_size = 128
    dataset = Dataset(dataset_path, keys, batch_size)
    adquistion_name = 'c_cassi' #  ['spc', 'cassi']






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Loading dataset:  cifar10
    Files already downloaded and verified
    Files already downloaded and verified




.. GENERATED FROM PYTHON SOURCE LINES 63-65

Visualize dataset
-----------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 65-76

.. code-block:: Python

    from torchvision.utils import make_grid

    sample = next(iter(dataset.train_dataset))[0]
    img = make_grid(sample[:32], nrow=8, padding=1, normalize=True, scale_each=False, pad_value=0)

    plt.figure(figsize=(10,10))
    plt.imshow(img.permute(1, 2, 0))
    plt.title('CIFAR10 dataset')
    plt.axis('off')
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_demo_colibri_001.png
   :alt: CIFAR10 dataset
   :srcset: /auto_examples/images/sphx_glr_demo_colibri_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 77-81

Optics forward model
-----------------------------------------------
Define the forward operators :math:`\mathbf{y} = \mathbf{H}_\phi \mathbf{x}`, in this case, the CASSI and SPC forward models.  
Each optics model can comptute the forward and backward operators i.e., :math:`\mathbf{y} = \mathbf{H}_\phi \mathbf{x}` and :math:`\mathbf{x} = \mathbf{H}^T_\phi \mathbf{y}`.

.. GENERATED FROM PYTHON SOURCE LINES 81-119

.. code-block:: Python




    import math
    from colibri.optics import SPC, SD_CASSI, DD_CASSI, C_CASSI

    img_size = sample.shape[1:]

    acquisition_config = dict(
        input_shape = img_size,
    )

    if adquistion_name == 'spc':
        n_measurements  = 256 
        n_measurements_sqrt = int(math.sqrt(n_measurements))    
        acquisition_config['n_measurements'] = n_measurements

    acquisition_model = {
        'spc': SPC(**acquisition_config),
        'sd_cassi': SD_CASSI(**acquisition_config),
        'dd_cassi': DD_CASSI(**acquisition_config),
        'c_cassi': C_CASSI(**acquisition_config)
    }[adquistion_name]

    y = acquisition_model(sample)

    if adquistion_name == 'spc':
        y = y.reshape(y.shape[0], -1, n_measurements_sqrt, n_measurements_sqrt)

    img = make_grid(y[:32], nrow=8, padding=1, normalize=True, scale_each=False, pad_value=0)

    plt.figure(figsize=(10,10))
    plt.imshow(img.permute(1, 2, 0))
    plt.axis('off')
    plt.title(f'{adquistion_name.upper()} measurements')
    plt.show()





.. image-sg:: /auto_examples/images/sphx_glr_demo_colibri_002.png
   :alt: C_CASSI measurements
   :srcset: /auto_examples/images/sphx_glr_demo_colibri_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 120-126

Reconstruction model
-----------------------------------------------
Define the recovery model :math:`\mathbf{x} = \mathcal{G}_\theta( \mathbf{y})`, in this case, a simple U-Net model. 
You can add you custom model by using the :meth: `build_network` function.
Additionally we define the end-to-end model that combines the forward and recovery models.
Define the loss function :math:`\mathcal{L}`, and the regularizers :math:`\mathcal{R}` for the forward and recovery models. 

.. GENERATED FROM PYTHON SOURCE LINES 126-188

.. code-block:: Python



    from colibri.models import build_network, Unet, Autoencoder
    from colibri.misc import E2E
    from colibri.train import Training
    from colibri.metrics import psnr, ssim
    from colibri.regularizers import (
        Reg_Binary,
        Reg_Transmittance,
        MinVariance,
        KLGaussian,
    )


    network_config = dict(
        in_channels=sample.shape[1],
        out_channels=sample.shape[1],
        reduce_spatial = True           # Only for Autoencoder
    )

    recovery_model = build_network(Unet, **network_config)

    model = E2E(acquisition_model, recovery_model)
    model = model.to(device)

    optimizer = torch.optim.Adam(model.parameters(), lr=1e-3)
    losses = {"MSE": torch.nn.MSELoss(), "L1": torch.nn.L1Loss()}
    metrics = {"PSNR": psnr, "SSIM": ssim}
    losses_weights = [1.0, 1.0]

    n_epochs = 10
    steps_per_epoch = 10
    frequency = 1
    regularizers_optics_ce = {"RB": Reg_Binary(), "RT": Reg_Transmittance()}
    regularizers_optics_ce_weights = [50, 1]

    regularizers_optics_mo = {"MV": MinVariance(), "KLG": KLGaussian(stddev=0.1)}
    regularizers_optics_mo_weights = [1e-3, 0.1]

    train_schedule = Training(
        model=model,
        train_loader=dataset.train_dataset,
        optimizer=optimizer,
        loss_func=losses,
        losses_weights=losses_weights,
        metrics=metrics,
        regularizers=None,
        regularization_weights=None,
        schedulers=[],
        callbacks=[],
        device=device,
        regularizers_optics_ce=regularizers_optics_ce,
        regularization_optics_weights_ce=regularizers_optics_ce_weights,
        regularizers_optics_mo=regularizers_optics_mo,
        regularization_optics_weights_mo=regularizers_optics_mo_weights,
    )

    results = train_schedule.fit(
        n_epochs=n_epochs, steps_per_epoch=steps_per_epoch, freq=frequency
    )






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 1/10:   0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 1/10:   0%|          | 1/391 [00:01<06:43,  1.04s/it, s=MSE: 7.24E-02, L1: 2.21E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.66E+00,]    Train :: Epoch: 1/10:   1%|          | 2/391 [00:01<03:24,  1.90it/s, s=MSE: 7.24E-02, L1: 2.21E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.66E+00,]    Train :: Epoch: 1/10:   1%|          | 2/391 [00:01<03:24,  1.90it/s, s=MSE: 4.98E-02, L1: 1.82E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.64E+00,]    Train :: Epoch: 1/10:   1%|          | 3/391 [00:02<04:34,  1.41it/s, s=MSE: 4.98E-02, L1: 1.82E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.64E+00,]    Train :: Epoch: 1/10:   1%|          | 3/391 [00:02<04:34,  1.41it/s, s=MSE: 4.03E-02, L1: 1.62E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.58E+00,]    Train :: Epoch: 1/10:   1%|          | 4/391 [00:02<05:03,  1.27it/s, s=MSE: 4.03E-02, L1: 1.62E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.58E+00,]    Train :: Epoch: 1/10:   1%|          | 4/391 [00:03<05:03,  1.27it/s, s=MSE: 3.40E-02, L1: 1.48E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.73E+00,]    Train :: Epoch: 1/10:   1%|▏         | 5/391 [00:03<05:20,  1.20it/s, s=MSE: 3.40E-02, L1: 1.48E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.73E+00,]    Train :: Epoch: 1/10:   1%|▏         | 5/391 [00:04<05:20,  1.20it/s, s=MSE: 3.05E-02, L1: 1.40E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.57E+00,]    Train :: Epoch: 1/10:   2%|▏         | 6/391 [00:04<05:33,  1.16it/s, s=MSE: 3.05E-02, L1: 1.40E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.57E+00,]    Train :: Epoch: 1/10:   2%|▏         | 6/391 [00:05<05:33,  1.16it/s, s=MSE: 3.07E-02, L1: 1.40E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.55E+00,]    Train :: Epoch: 1/10:   2%|▏         | 7/391 [00:05<05:40,  1.13it/s, s=MSE: 3.07E-02, L1: 1.40E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.55E+00,]    Train :: Epoch: 1/10:   2%|▏         | 7/391 [00:06<05:40,  1.13it/s, s=MSE: 2.68E-02, L1: 1.29E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.70E+00,]    Train :: Epoch: 1/10:   2%|▏         | 8/391 [00:06<05:46,  1.10it/s, s=MSE: 2.68E-02, L1: 1.29E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.70E+00,]    Train :: Epoch: 1/10:   2%|▏         | 8/391 [00:07<05:46,  1.10it/s, s=MSE: 2.50E-02, L1: 1.25E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.82E+00,]    Train :: Epoch: 1/10:   2%|▏         | 9/391 [00:07<05:51,  1.09it/s, s=MSE: 2.50E-02, L1: 1.25E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.82E+00,]    Train :: Epoch: 1/10:   2%|▏         | 9/391 [00:08<05:51,  1.09it/s, s=MSE: 2.39E-02, L1: 1.21E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.83E+00,]    Train :: Epoch: 1/10:   3%|▎         | 10/391 [00:08<05:52,  1.08it/s, s=MSE: 2.39E-02, L1: 1.21E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.83E+00,]    Train :: Epoch: 1/10:   3%|▎         | 10/391 [00:09<05:52,  1.08it/s, s=MSE: 2.25E-02, L1: 1.17E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.67E+00,]    Train :: Epoch: 1/10:   3%|▎         | 11/391 [00:09<05:56,  1.07it/s, s=MSE: 2.25E-02, L1: 1.17E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.67E+00,]    Train :: Epoch: 1/10:   3%|▎         | 11/391 [00:10<05:56,  1.07it/s, s=MSE: 2.07E-02, L1: 1.13E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.57E+00,]    Train :: Epoch: 1/10:   3%|▎         | 11/391 [00:10<06:00,  1.05it/s, s=MSE: 2.07E-02, L1: 1.13E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.57E+00,]
      0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 2/10:   0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 2/10:   0%|          | 1/391 [00:00<06:04,  1.07it/s, s=MSE: 2.09E-02, L1: 1.13E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.31E-02, KLG: 4.32E+00,]    Train :: Epoch: 2/10:   1%|          | 2/391 [00:00<03:04,  2.11it/s, s=MSE: 2.09E-02, L1: 1.13E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.31E-02, KLG: 4.32E+00,]    Train :: Epoch: 2/10:   1%|          | 2/391 [00:01<03:04,  2.11it/s, s=MSE: 2.10E-02, L1: 1.13E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 4.96E+00,]    Train :: Epoch: 2/10:   1%|          | 3/391 [00:01<04:19,  1.50it/s, s=MSE: 2.10E-02, L1: 1.13E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 4.96E+00,]    Train :: Epoch: 2/10:   1%|          | 3/391 [00:02<04:19,  1.50it/s, s=MSE: 1.87E-02, L1: 1.07E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.40E+00,]    Train :: Epoch: 2/10:   1%|          | 4/391 [00:02<04:56,  1.31it/s, s=MSE: 1.87E-02, L1: 1.07E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.40E+00,]    Train :: Epoch: 2/10:   1%|          | 4/391 [00:03<04:56,  1.31it/s, s=MSE: 1.67E-02, L1: 9.99E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.29E-02, KLG: 4.60E+00,]    Train :: Epoch: 2/10:   1%|▏         | 5/391 [00:03<05:18,  1.21it/s, s=MSE: 1.67E-02, L1: 9.99E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.29E-02, KLG: 4.60E+00,]    Train :: Epoch: 2/10:   1%|▏         | 5/391 [00:04<05:18,  1.21it/s, s=MSE: 1.74E-02, L1: 1.04E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.52E+00,]    Train :: Epoch: 2/10:   2%|▏         | 6/391 [00:04<05:32,  1.16it/s, s=MSE: 1.74E-02, L1: 1.04E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.52E+00,]    Train :: Epoch: 2/10:   2%|▏         | 6/391 [00:05<05:32,  1.16it/s, s=MSE: 1.67E-02, L1: 9.97E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.76E+00,]    Train :: Epoch: 2/10:   2%|▏         | 7/391 [00:05<05:40,  1.13it/s, s=MSE: 1.67E-02, L1: 9.97E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.76E+00,]    Train :: Epoch: 2/10:   2%|▏         | 7/391 [00:06<05:40,  1.13it/s, s=MSE: 1.66E-02, L1: 1.01E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 4.56E+00,]    Train :: Epoch: 2/10:   2%|▏         | 8/391 [00:06<05:44,  1.11it/s, s=MSE: 1.66E-02, L1: 1.01E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 4.56E+00,]    Train :: Epoch: 2/10:   2%|▏         | 8/391 [00:07<05:44,  1.11it/s, s=MSE: 1.59E-02, L1: 9.60E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.54E+00,]    Train :: Epoch: 2/10:   2%|▏         | 9/391 [00:07<05:47,  1.10it/s, s=MSE: 1.59E-02, L1: 9.60E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.54E+00,]    Train :: Epoch: 2/10:   2%|▏         | 9/391 [00:08<05:47,  1.10it/s, s=MSE: 1.67E-02, L1: 1.01E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.96E+00,]    Train :: Epoch: 2/10:   3%|▎         | 10/391 [00:08<05:49,  1.09it/s, s=MSE: 1.67E-02, L1: 1.01E-01, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.96E+00,]    Train :: Epoch: 2/10:   3%|▎         | 10/391 [00:09<05:49,  1.09it/s, s=MSE: 1.47E-02, L1: 9.31E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.58E+00,]    Train :: Epoch: 2/10:   3%|▎         | 11/391 [00:09<05:52,  1.08it/s, s=MSE: 1.47E-02, L1: 9.31E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.58E+00,]    Train :: Epoch: 2/10:   3%|▎         | 11/391 [00:10<05:52,  1.08it/s, s=MSE: 1.35E-02, L1: 8.88E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.63E+00,]    Train :: Epoch: 2/10:   3%|▎         | 11/391 [00:10<05:55,  1.07it/s, s=MSE: 1.35E-02, L1: 8.88E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.63E+00,]
      0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 3/10:   0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 3/10:   0%|          | 1/391 [00:00<06:03,  1.07it/s, s=MSE: 1.37E-02, L1: 8.97E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.78E+00,]    Train :: Epoch: 3/10:   1%|          | 2/391 [00:00<03:04,  2.11it/s, s=MSE: 1.37E-02, L1: 8.97E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.78E+00,]    Train :: Epoch: 3/10:   1%|          | 2/391 [00:01<03:04,  2.11it/s, s=MSE: 1.31E-02, L1: 8.72E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.64E+00,]    Train :: Epoch: 3/10:   1%|          | 3/391 [00:01<04:16,  1.51it/s, s=MSE: 1.31E-02, L1: 8.72E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.64E+00,]    Train :: Epoch: 3/10:   1%|          | 3/391 [00:02<04:16,  1.51it/s, s=MSE: 1.35E-02, L1: 8.82E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.76E+00,]    Train :: Epoch: 3/10:   1%|          | 4/391 [00:02<04:52,  1.33it/s, s=MSE: 1.35E-02, L1: 8.82E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.76E+00,]    Train :: Epoch: 3/10:   1%|          | 4/391 [00:03<04:52,  1.33it/s, s=MSE: 1.22E-02, L1: 8.36E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.66E+00,]    Train :: Epoch: 3/10:   1%|▏         | 5/391 [00:03<05:13,  1.23it/s, s=MSE: 1.22E-02, L1: 8.36E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.66E+00,]    Train :: Epoch: 3/10:   1%|▏         | 5/391 [00:04<05:13,  1.23it/s, s=MSE: 1.32E-02, L1: 8.80E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.43E-02, KLG: 4.74E+00,]    Train :: Epoch: 3/10:   2%|▏         | 6/391 [00:04<05:34,  1.15it/s, s=MSE: 1.32E-02, L1: 8.80E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.43E-02, KLG: 4.74E+00,]    Train :: Epoch: 3/10:   2%|▏         | 6/391 [00:05<05:34,  1.15it/s, s=MSE: 1.27E-02, L1: 8.55E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.39E-02, KLG: 4.73E+00,]    Train :: Epoch: 3/10:   2%|▏         | 7/391 [00:05<05:40,  1.13it/s, s=MSE: 1.27E-02, L1: 8.55E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.39E-02, KLG: 4.73E+00,]    Train :: Epoch: 3/10:   2%|▏         | 7/391 [00:06<05:40,  1.13it/s, s=MSE: 1.22E-02, L1: 8.35E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.78E+00,]    Train :: Epoch: 3/10:   2%|▏         | 8/391 [00:06<05:44,  1.11it/s, s=MSE: 1.22E-02, L1: 8.35E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.78E+00,]    Train :: Epoch: 3/10:   2%|▏         | 8/391 [00:07<05:44,  1.11it/s, s=MSE: 1.11E-02, L1: 7.90E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.63E+00,]    Train :: Epoch: 3/10:   2%|▏         | 9/391 [00:07<05:45,  1.11it/s, s=MSE: 1.11E-02, L1: 7.90E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.63E+00,]    Train :: Epoch: 3/10:   2%|▏         | 9/391 [00:08<05:45,  1.11it/s, s=MSE: 1.07E-02, L1: 7.67E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.69E+00,]    Train :: Epoch: 3/10:   3%|▎         | 10/391 [00:08<05:45,  1.10it/s, s=MSE: 1.07E-02, L1: 7.67E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.69E+00,]    Train :: Epoch: 3/10:   3%|▎         | 10/391 [00:09<05:45,  1.10it/s, s=MSE: 1.21E-02, L1: 8.41E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.41E-02, KLG: 4.91E+00,]    Train :: Epoch: 3/10:   3%|▎         | 11/391 [00:09<05:45,  1.10it/s, s=MSE: 1.21E-02, L1: 8.41E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.41E-02, KLG: 4.91E+00,]    Train :: Epoch: 3/10:   3%|▎         | 11/391 [00:10<05:45,  1.10it/s, s=MSE: 1.05E-02, L1: 7.74E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.66E+00,]    Train :: Epoch: 3/10:   3%|▎         | 11/391 [00:10<05:51,  1.08it/s, s=MSE: 1.05E-02, L1: 7.74E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.66E+00,]
      0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 4/10:   0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 4/10:   0%|          | 1/391 [00:00<05:57,  1.09it/s, s=MSE: 1.11E-02, L1: 7.92E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 4.57E+00,]    Train :: Epoch: 4/10:   1%|          | 2/391 [00:00<03:01,  2.15it/s, s=MSE: 1.11E-02, L1: 7.92E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 4.57E+00,]    Train :: Epoch: 4/10:   1%|          | 2/391 [00:01<03:01,  2.15it/s, s=MSE: 1.06E-02, L1: 7.75E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.39E-02, KLG: 4.92E+00,]    Train :: Epoch: 4/10:   1%|          | 3/391 [00:01<04:15,  1.52it/s, s=MSE: 1.06E-02, L1: 7.75E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.39E-02, KLG: 4.92E+00,]    Train :: Epoch: 4/10:   1%|          | 3/391 [00:02<04:15,  1.52it/s, s=MSE: 9.91E-03, L1: 7.41E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.50E+00,]    Train :: Epoch: 4/10:   1%|          | 4/391 [00:02<04:52,  1.32it/s, s=MSE: 9.91E-03, L1: 7.41E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.50E+00,]    Train :: Epoch: 4/10:   1%|          | 4/391 [00:03<04:52,  1.32it/s, s=MSE: 1.01E-02, L1: 7.55E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 4.82E+00,]    Train :: Epoch: 4/10:   1%|▏         | 5/391 [00:03<05:14,  1.23it/s, s=MSE: 1.01E-02, L1: 7.55E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 4.82E+00,]    Train :: Epoch: 4/10:   1%|▏         | 5/391 [00:04<05:14,  1.23it/s, s=MSE: 9.00E-03, L1: 7.11E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.60E+00,]    Train :: Epoch: 4/10:   2%|▏         | 6/391 [00:04<05:27,  1.17it/s, s=MSE: 9.00E-03, L1: 7.11E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.60E+00,]    Train :: Epoch: 4/10:   2%|▏         | 6/391 [00:05<05:27,  1.17it/s, s=MSE: 9.36E-03, L1: 7.16E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.75E+00,]    Train :: Epoch: 4/10:   2%|▏         | 7/391 [00:05<05:35,  1.15it/s, s=MSE: 9.36E-03, L1: 7.16E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.75E+00,]    Train :: Epoch: 4/10:   2%|▏         | 7/391 [00:06<05:35,  1.15it/s, s=MSE: 9.56E-03, L1: 7.27E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.47E+00,]    Train :: Epoch: 4/10:   2%|▏         | 8/391 [00:06<05:40,  1.13it/s, s=MSE: 9.56E-03, L1: 7.27E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.47E+00,]    Train :: Epoch: 4/10:   2%|▏         | 8/391 [00:07<05:40,  1.13it/s, s=MSE: 9.10E-03, L1: 7.08E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.53E+00,]    Train :: Epoch: 4/10:   2%|▏         | 9/391 [00:07<05:42,  1.11it/s, s=MSE: 9.10E-03, L1: 7.08E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.53E+00,]    Train :: Epoch: 4/10:   2%|▏         | 9/391 [00:08<05:42,  1.11it/s, s=MSE: 9.26E-03, L1: 7.06E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.65E+00,]    Train :: Epoch: 4/10:   3%|▎         | 10/391 [00:08<05:45,  1.10it/s, s=MSE: 9.26E-03, L1: 7.06E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.65E+00,]    Train :: Epoch: 4/10:   3%|▎         | 10/391 [00:09<05:45,  1.10it/s, s=MSE: 8.09E-03, L1: 6.61E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.31E-02, KLG: 4.54E+00,]    Train :: Epoch: 4/10:   3%|▎         | 11/391 [00:09<05:44,  1.10it/s, s=MSE: 8.09E-03, L1: 6.61E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.31E-02, KLG: 4.54E+00,]    Train :: Epoch: 4/10:   3%|▎         | 11/391 [00:10<05:44,  1.10it/s, s=MSE: 8.76E-03, L1: 6.88E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.52E+00,]    Train :: Epoch: 4/10:   3%|▎         | 11/391 [00:10<05:49,  1.09it/s, s=MSE: 8.76E-03, L1: 6.88E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.52E+00,]
      0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 5/10:   0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 5/10:   0%|          | 1/391 [00:00<06:02,  1.08it/s, s=MSE: 8.62E-03, L1: 6.78E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.56E+00,]    Train :: Epoch: 5/10:   1%|          | 2/391 [00:00<03:03,  2.12it/s, s=MSE: 8.62E-03, L1: 6.78E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.56E+00,]    Train :: Epoch: 5/10:   1%|          | 2/391 [00:01<03:03,  2.12it/s, s=MSE: 8.51E-03, L1: 6.80E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.31E-02, KLG: 4.54E+00,]    Train :: Epoch: 5/10:   1%|          | 3/391 [00:01<04:14,  1.52it/s, s=MSE: 8.51E-03, L1: 6.80E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.31E-02, KLG: 4.54E+00,]    Train :: Epoch: 5/10:   1%|          | 3/391 [00:02<04:14,  1.52it/s, s=MSE: 8.41E-03, L1: 6.76E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.48E+00,]    Train :: Epoch: 5/10:   1%|          | 4/391 [00:02<04:52,  1.33it/s, s=MSE: 8.41E-03, L1: 6.76E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.48E+00,]    Train :: Epoch: 5/10:   1%|          | 4/391 [00:03<04:52,  1.33it/s, s=MSE: 1.05E-02, L1: 7.56E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.45E-02, KLG: 4.97E+00,]    Train :: Epoch: 5/10:   1%|▏         | 5/391 [00:03<05:12,  1.24it/s, s=MSE: 1.05E-02, L1: 7.56E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.45E-02, KLG: 4.97E+00,]    Train :: Epoch: 5/10:   1%|▏         | 5/391 [00:04<05:12,  1.24it/s, s=MSE: 8.61E-03, L1: 6.82E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.78E+00,]    Train :: Epoch: 5/10:   2%|▏         | 6/391 [00:04<05:24,  1.19it/s, s=MSE: 8.61E-03, L1: 6.82E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.78E+00,]    Train :: Epoch: 5/10:   2%|▏         | 6/391 [00:05<05:24,  1.19it/s, s=MSE: 8.58E-03, L1: 6.77E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.63E+00,]    Train :: Epoch: 5/10:   2%|▏         | 7/391 [00:05<05:32,  1.16it/s, s=MSE: 8.58E-03, L1: 6.77E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.63E+00,]    Train :: Epoch: 5/10:   2%|▏         | 7/391 [00:06<05:32,  1.16it/s, s=MSE: 8.30E-03, L1: 6.69E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.53E+00,]    Train :: Epoch: 5/10:   2%|▏         | 8/391 [00:06<05:37,  1.14it/s, s=MSE: 8.30E-03, L1: 6.69E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.53E+00,]    Train :: Epoch: 5/10:   2%|▏         | 8/391 [00:07<05:37,  1.14it/s, s=MSE: 8.41E-03, L1: 6.68E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.57E+00,]    Train :: Epoch: 5/10:   2%|▏         | 9/391 [00:07<05:39,  1.13it/s, s=MSE: 8.41E-03, L1: 6.68E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.57E+00,]    Train :: Epoch: 5/10:   2%|▏         | 9/391 [00:08<05:39,  1.13it/s, s=MSE: 8.03E-03, L1: 6.59E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.60E+00,]    Train :: Epoch: 5/10:   3%|▎         | 10/391 [00:08<05:43,  1.11it/s, s=MSE: 8.03E-03, L1: 6.59E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.60E+00,]    Train :: Epoch: 5/10:   3%|▎         | 10/391 [00:09<05:43,  1.11it/s, s=MSE: 7.60E-03, L1: 6.37E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.30E-02, KLG: 4.68E+00,]    Train :: Epoch: 5/10:   3%|▎         | 11/391 [00:09<05:44,  1.10it/s, s=MSE: 7.60E-03, L1: 6.37E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.30E-02, KLG: 4.68E+00,]    Train :: Epoch: 5/10:   3%|▎         | 11/391 [00:10<05:44,  1.10it/s, s=MSE: 8.25E-03, L1: 6.70E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.31E-02, KLG: 4.77E+00,]    Train :: Epoch: 5/10:   3%|▎         | 11/391 [00:10<05:48,  1.09it/s, s=MSE: 8.25E-03, L1: 6.70E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.31E-02, KLG: 4.77E+00,]
      0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 6/10:   0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 6/10:   0%|          | 1/391 [00:00<05:58,  1.09it/s, s=MSE: 8.87E-03, L1: 6.87E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 5.01E+00,]    Train :: Epoch: 6/10:   1%|          | 2/391 [00:00<03:01,  2.15it/s, s=MSE: 8.87E-03, L1: 6.87E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 5.01E+00,]    Train :: Epoch: 6/10:   1%|          | 2/391 [00:01<03:01,  2.15it/s, s=MSE: 7.42E-03, L1: 6.33E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.65E+00,]    Train :: Epoch: 6/10:   1%|          | 3/391 [00:01<04:14,  1.53it/s, s=MSE: 7.42E-03, L1: 6.33E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.65E+00,]    Train :: Epoch: 6/10:   1%|          | 3/391 [00:02<04:14,  1.53it/s, s=MSE: 8.11E-03, L1: 6.66E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.46E+00,]    Train :: Epoch: 6/10:   1%|          | 4/391 [00:02<04:52,  1.32it/s, s=MSE: 8.11E-03, L1: 6.66E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.46E+00,]    Train :: Epoch: 6/10:   1%|          | 4/391 [00:03<04:52,  1.32it/s, s=MSE: 7.85E-03, L1: 6.48E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.75E+00,]    Train :: Epoch: 6/10:   1%|▏         | 5/391 [00:03<05:13,  1.23it/s, s=MSE: 7.85E-03, L1: 6.48E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.75E+00,]    Train :: Epoch: 6/10:   1%|▏         | 5/391 [00:04<05:13,  1.23it/s, s=MSE: 8.64E-03, L1: 6.85E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.39E-02, KLG: 4.91E+00,]    Train :: Epoch: 6/10:   2%|▏         | 6/391 [00:04<05:28,  1.17it/s, s=MSE: 8.64E-03, L1: 6.85E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.39E-02, KLG: 4.91E+00,]    Train :: Epoch: 6/10:   2%|▏         | 6/391 [00:05<05:28,  1.17it/s, s=MSE: 7.95E-03, L1: 6.49E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.47E+00,]    Train :: Epoch: 6/10:   2%|▏         | 7/391 [00:05<05:35,  1.15it/s, s=MSE: 7.95E-03, L1: 6.49E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.47E+00,]    Train :: Epoch: 6/10:   2%|▏         | 7/391 [00:06<05:35,  1.15it/s, s=MSE: 7.61E-03, L1: 6.40E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 4.73E+00,]    Train :: Epoch: 6/10:   2%|▏         | 8/391 [00:06<05:40,  1.13it/s, s=MSE: 7.61E-03, L1: 6.40E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 4.73E+00,]    Train :: Epoch: 6/10:   2%|▏         | 8/391 [00:07<05:40,  1.13it/s, s=MSE: 7.60E-03, L1: 6.32E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.29E-02, KLG: 4.52E+00,]    Train :: Epoch: 6/10:   2%|▏         | 9/391 [00:07<05:42,  1.12it/s, s=MSE: 7.60E-03, L1: 6.32E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.29E-02, KLG: 4.52E+00,]    Train :: Epoch: 6/10:   2%|▏         | 9/391 [00:08<05:42,  1.12it/s, s=MSE: 7.24E-03, L1: 6.15E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.68E+00,]    Train :: Epoch: 6/10:   3%|▎         | 10/391 [00:08<05:43,  1.11it/s, s=MSE: 7.24E-03, L1: 6.15E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.68E+00,]    Train :: Epoch: 6/10:   3%|▎         | 10/391 [00:09<05:43,  1.11it/s, s=MSE: 8.52E-03, L1: 6.77E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.27E-02, KLG: 4.32E+00,]    Train :: Epoch: 6/10:   3%|▎         | 11/391 [00:09<05:42,  1.11it/s, s=MSE: 8.52E-03, L1: 6.77E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.27E-02, KLG: 4.32E+00,]    Train :: Epoch: 6/10:   3%|▎         | 11/391 [00:10<05:42,  1.11it/s, s=MSE: 7.07E-03, L1: 6.19E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.45E+00,]    Train :: Epoch: 6/10:   3%|▎         | 11/391 [00:10<05:48,  1.09it/s, s=MSE: 7.07E-03, L1: 6.19E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.45E+00,]
      0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 7/10:   0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 7/10:   0%|          | 1/391 [00:00<05:55,  1.10it/s, s=MSE: 7.45E-03, L1: 6.28E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.70E+00,]    Train :: Epoch: 7/10:   1%|          | 2/391 [00:00<02:59,  2.16it/s, s=MSE: 7.45E-03, L1: 6.28E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.70E+00,]    Train :: Epoch: 7/10:   1%|          | 2/391 [00:01<02:59,  2.16it/s, s=MSE: 7.58E-03, L1: 6.43E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.89E+00,]    Train :: Epoch: 7/10:   1%|          | 3/391 [00:01<04:12,  1.53it/s, s=MSE: 7.58E-03, L1: 6.43E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.89E+00,]    Train :: Epoch: 7/10:   1%|          | 3/391 [00:02<04:12,  1.53it/s, s=MSE: 7.23E-03, L1: 6.22E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.68E+00,]    Train :: Epoch: 7/10:   1%|          | 4/391 [00:02<04:50,  1.33it/s, s=MSE: 7.23E-03, L1: 6.22E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.68E+00,]    Train :: Epoch: 7/10:   1%|          | 4/391 [00:03<04:50,  1.33it/s, s=MSE: 7.43E-03, L1: 6.27E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.55E+00,]    Train :: Epoch: 7/10:   1%|▏         | 5/391 [00:03<05:10,  1.24it/s, s=MSE: 7.43E-03, L1: 6.27E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.55E+00,]    Train :: Epoch: 7/10:   1%|▏         | 5/391 [00:04<05:10,  1.24it/s, s=MSE: 7.41E-03, L1: 6.22E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.30E-02, KLG: 4.56E+00,]    Train :: Epoch: 7/10:   2%|▏         | 6/391 [00:04<05:23,  1.19it/s, s=MSE: 7.41E-03, L1: 6.22E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.30E-02, KLG: 4.56E+00,]    Train :: Epoch: 7/10:   2%|▏         | 6/391 [00:05<05:23,  1.19it/s, s=MSE: 6.93E-03, L1: 6.10E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.41E+00,]    Train :: Epoch: 7/10:   2%|▏         | 7/391 [00:05<05:31,  1.16it/s, s=MSE: 6.93E-03, L1: 6.10E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.41E+00,]    Train :: Epoch: 7/10:   2%|▏         | 7/391 [00:06<05:31,  1.16it/s, s=MSE: 7.36E-03, L1: 6.24E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.64E+00,]    Train :: Epoch: 7/10:   2%|▏         | 8/391 [00:06<05:37,  1.14it/s, s=MSE: 7.36E-03, L1: 6.24E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.64E+00,]    Train :: Epoch: 7/10:   2%|▏         | 8/391 [00:07<05:37,  1.14it/s, s=MSE: 6.88E-03, L1: 6.03E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.76E+00,]    Train :: Epoch: 7/10:   2%|▏         | 9/391 [00:07<05:40,  1.12it/s, s=MSE: 6.88E-03, L1: 6.03E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.76E+00,]    Train :: Epoch: 7/10:   2%|▏         | 9/391 [00:08<05:40,  1.12it/s, s=MSE: 7.43E-03, L1: 6.27E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.40E-02, KLG: 4.80E+00,]    Train :: Epoch: 7/10:   3%|▎         | 10/391 [00:08<05:41,  1.12it/s, s=MSE: 7.43E-03, L1: 6.27E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.40E-02, KLG: 4.80E+00,]    Train :: Epoch: 7/10:   3%|▎         | 10/391 [00:09<05:41,  1.12it/s, s=MSE: 7.23E-03, L1: 6.15E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.30E-02, KLG: 4.65E+00,]    Train :: Epoch: 7/10:   3%|▎         | 11/391 [00:09<05:44,  1.10it/s, s=MSE: 7.23E-03, L1: 6.15E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.30E-02, KLG: 4.65E+00,]    Train :: Epoch: 7/10:   3%|▎         | 11/391 [00:10<05:44,  1.10it/s, s=MSE: 6.79E-03, L1: 6.01E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.30E-02, KLG: 4.49E+00,]    Train :: Epoch: 7/10:   3%|▎         | 11/391 [00:10<05:47,  1.09it/s, s=MSE: 6.79E-03, L1: 6.01E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.30E-02, KLG: 4.49E+00,]
      0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 8/10:   0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 8/10:   0%|          | 1/391 [00:00<05:56,  1.10it/s, s=MSE: 7.09E-03, L1: 6.16E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 4.88E+00,]    Train :: Epoch: 8/10:   1%|          | 2/391 [00:00<03:00,  2.16it/s, s=MSE: 7.09E-03, L1: 6.16E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 4.88E+00,]    Train :: Epoch: 8/10:   1%|          | 2/391 [00:01<03:00,  2.16it/s, s=MSE: 6.44E-03, L1: 5.88E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.28E-02, KLG: 4.49E+00,]    Train :: Epoch: 8/10:   1%|          | 3/391 [00:01<04:11,  1.54it/s, s=MSE: 6.44E-03, L1: 5.88E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.28E-02, KLG: 4.49E+00,]    Train :: Epoch: 8/10:   1%|          | 3/391 [00:02<04:11,  1.54it/s, s=MSE: 6.67E-03, L1: 5.88E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.80E+00,]    Train :: Epoch: 8/10:   1%|          | 4/391 [00:02<04:50,  1.33it/s, s=MSE: 6.67E-03, L1: 5.88E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.80E+00,]    Train :: Epoch: 8/10:   1%|          | 4/391 [00:03<04:50,  1.33it/s, s=MSE: 7.87E-03, L1: 6.56E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.31E-02, KLG: 4.23E+00,]    Train :: Epoch: 8/10:   1%|▏         | 5/391 [00:03<05:11,  1.24it/s, s=MSE: 7.87E-03, L1: 6.56E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.31E-02, KLG: 4.23E+00,]    Train :: Epoch: 8/10:   1%|▏         | 5/391 [00:04<05:11,  1.24it/s, s=MSE: 6.61E-03, L1: 5.89E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.71E+00,]    Train :: Epoch: 8/10:   2%|▏         | 6/391 [00:04<05:27,  1.17it/s, s=MSE: 6.61E-03, L1: 5.89E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.71E+00,]    Train :: Epoch: 8/10:   2%|▏         | 6/391 [00:05<05:27,  1.17it/s, s=MSE: 6.08E-03, L1: 5.63E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.29E-02, KLG: 4.45E+00,]    Train :: Epoch: 8/10:   2%|▏         | 7/391 [00:05<05:36,  1.14it/s, s=MSE: 6.08E-03, L1: 5.63E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.29E-02, KLG: 4.45E+00,]    Train :: Epoch: 8/10:   2%|▏         | 7/391 [00:06<05:36,  1.14it/s, s=MSE: 6.35E-03, L1: 5.76E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.67E+00,]    Train :: Epoch: 8/10:   2%|▏         | 8/391 [00:06<05:51,  1.09it/s, s=MSE: 6.35E-03, L1: 5.76E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.67E+00,]    Train :: Epoch: 8/10:   2%|▏         | 8/391 [00:07<05:51,  1.09it/s, s=MSE: 6.86E-03, L1: 6.08E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.80E+00,]    Train :: Epoch: 8/10:   2%|▏         | 9/391 [00:07<05:51,  1.09it/s, s=MSE: 6.86E-03, L1: 6.08E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.80E+00,]    Train :: Epoch: 8/10:   2%|▏         | 9/391 [00:08<05:51,  1.09it/s, s=MSE: 6.42E-03, L1: 5.77E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.71E+00,]    Train :: Epoch: 8/10:   3%|▎         | 10/391 [00:08<05:51,  1.09it/s, s=MSE: 6.42E-03, L1: 5.77E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.71E+00,]    Train :: Epoch: 8/10:   3%|▎         | 10/391 [00:09<05:51,  1.09it/s, s=MSE: 6.29E-03, L1: 5.75E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.58E+00,]    Train :: Epoch: 8/10:   3%|▎         | 11/391 [00:09<05:49,  1.09it/s, s=MSE: 6.29E-03, L1: 5.75E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.58E+00,]    Train :: Epoch: 8/10:   3%|▎         | 11/391 [00:10<05:49,  1.09it/s, s=MSE: 6.75E-03, L1: 5.97E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.45E+00,]    Train :: Epoch: 8/10:   3%|▎         | 11/391 [00:10<05:53,  1.08it/s, s=MSE: 6.75E-03, L1: 5.97E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.45E+00,]
      0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 9/10:   0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 9/10:   0%|          | 1/391 [00:00<05:53,  1.10it/s, s=MSE: 6.49E-03, L1: 5.80E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.54E+00,]    Train :: Epoch: 9/10:   1%|          | 2/391 [00:00<02:58,  2.17it/s, s=MSE: 6.49E-03, L1: 5.80E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.54E+00,]    Train :: Epoch: 9/10:   1%|          | 2/391 [00:01<02:58,  2.17it/s, s=MSE: 6.15E-03, L1: 5.61E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.58E+00,]    Train :: Epoch: 9/10:   1%|          | 3/391 [00:01<04:15,  1.52it/s, s=MSE: 6.15E-03, L1: 5.61E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.58E+00,]    Train :: Epoch: 9/10:   1%|          | 3/391 [00:02<04:15,  1.52it/s, s=MSE: 6.88E-03, L1: 5.97E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.40E-02, KLG: 4.65E+00,]    Train :: Epoch: 9/10:   1%|          | 4/391 [00:02<04:52,  1.32it/s, s=MSE: 6.88E-03, L1: 5.97E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.40E-02, KLG: 4.65E+00,]    Train :: Epoch: 9/10:   1%|          | 4/391 [00:03<04:52,  1.32it/s, s=MSE: 6.57E-03, L1: 5.85E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.69E+00,]    Train :: Epoch: 9/10:   1%|▏         | 5/391 [00:03<05:12,  1.24it/s, s=MSE: 6.57E-03, L1: 5.85E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.69E+00,]    Train :: Epoch: 9/10:   1%|▏         | 5/391 [00:04<05:12,  1.24it/s, s=MSE: 6.40E-03, L1: 5.72E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.73E+00,]    Train :: Epoch: 9/10:   2%|▏         | 6/391 [00:04<05:27,  1.18it/s, s=MSE: 6.40E-03, L1: 5.72E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.73E+00,]    Train :: Epoch: 9/10:   2%|▏         | 6/391 [00:05<05:27,  1.18it/s, s=MSE: 6.29E-03, L1: 5.73E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.78E+00,]    Train :: Epoch: 9/10:   2%|▏         | 7/391 [00:05<05:34,  1.15it/s, s=MSE: 6.29E-03, L1: 5.73E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.78E+00,]    Train :: Epoch: 9/10:   2%|▏         | 7/391 [00:06<05:34,  1.15it/s, s=MSE: 6.14E-03, L1: 5.76E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.97E+00,]    Train :: Epoch: 9/10:   2%|▏         | 8/391 [00:06<05:40,  1.13it/s, s=MSE: 6.14E-03, L1: 5.76E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.97E+00,]    Train :: Epoch: 9/10:   2%|▏         | 8/391 [00:07<05:40,  1.13it/s, s=MSE: 6.20E-03, L1: 5.69E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 4.79E+00,]    Train :: Epoch: 9/10:   2%|▏         | 9/391 [00:07<05:42,  1.12it/s, s=MSE: 6.20E-03, L1: 5.69E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.38E-02, KLG: 4.79E+00,]    Train :: Epoch: 9/10:   2%|▏         | 9/391 [00:08<05:42,  1.12it/s, s=MSE: 5.85E-03, L1: 5.63E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.31E-02, KLG: 4.48E+00,]    Train :: Epoch: 9/10:   3%|▎         | 10/391 [00:08<05:43,  1.11it/s, s=MSE: 5.85E-03, L1: 5.63E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.31E-02, KLG: 4.48E+00,]    Train :: Epoch: 9/10:   3%|▎         | 10/391 [00:09<05:43,  1.11it/s, s=MSE: 6.71E-03, L1: 5.94E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.54E+00,]    Train :: Epoch: 9/10:   3%|▎         | 11/391 [00:09<05:48,  1.09it/s, s=MSE: 6.71E-03, L1: 5.94E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.34E-02, KLG: 4.54E+00,]    Train :: Epoch: 9/10:   3%|▎         | 11/391 [00:10<05:48,  1.09it/s, s=MSE: 6.54E-03, L1: 5.92E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.92E+00,]    Train :: Epoch: 9/10:   3%|▎         | 11/391 [00:10<05:50,  1.09it/s, s=MSE: 6.54E-03, L1: 5.92E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.92E+00,]
      0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 10/10:   0%|          | 0/391 [00:00<?, ?it/s]    Train :: Epoch: 10/10:   0%|          | 1/391 [00:00<05:55,  1.10it/s, s=MSE: 6.94E-03, L1: 6.04E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.90E+00,]    Train :: Epoch: 10/10:   1%|          | 2/391 [00:00<03:00,  2.16it/s, s=MSE: 6.94E-03, L1: 6.04E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.90E+00,]    Train :: Epoch: 10/10:   1%|          | 2/391 [00:01<03:00,  2.16it/s, s=MSE: 6.52E-03, L1: 5.84E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.81E+00,]    Train :: Epoch: 10/10:   1%|          | 3/391 [00:01<04:12,  1.54it/s, s=MSE: 6.52E-03, L1: 5.84E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.36E-02, KLG: 4.81E+00,]    Train :: Epoch: 10/10:   1%|          | 3/391 [00:02<04:12,  1.54it/s, s=MSE: 6.61E-03, L1: 5.95E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.51E+00,]    Train :: Epoch: 10/10:   1%|          | 4/391 [00:02<04:49,  1.34it/s, s=MSE: 6.61E-03, L1: 5.95E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.32E-02, KLG: 4.51E+00,]    Train :: Epoch: 10/10:   1%|          | 4/391 [00:03<04:49,  1.34it/s, s=MSE: 7.11E-03, L1: 6.17E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.42E-02, KLG: 4.69E+00,]    Train :: Epoch: 10/10:   1%|▏         | 5/391 [00:03<05:10,  1.24it/s, s=MSE: 7.11E-03, L1: 6.17E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.42E-02, KLG: 4.69E+00,]    Train :: Epoch: 10/10:   1%|▏         | 5/391 [00:04<05:10,  1.24it/s, s=MSE: 6.62E-03, L1: 5.98E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.38E+00,]    Train :: Epoch: 10/10:   2%|▏         | 6/391 [00:04<05:23,  1.19it/s, s=MSE: 6.62E-03, L1: 5.98E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.38E+00,]    Train :: Epoch: 10/10:   2%|▏         | 6/391 [00:05<05:23,  1.19it/s, s=MSE: 6.20E-03, L1: 5.76E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.52E+00,]    Train :: Epoch: 10/10:   2%|▏         | 7/391 [00:05<05:31,  1.16it/s, s=MSE: 6.20E-03, L1: 5.76E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.33E-02, KLG: 4.52E+00,]    Train :: Epoch: 10/10:   2%|▏         | 7/391 [00:06<05:31,  1.16it/s, s=MSE: 6.15E-03, L1: 5.63E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.67E+00,]    Train :: Epoch: 10/10:   2%|▏         | 8/391 [00:06<05:36,  1.14it/s, s=MSE: 6.15E-03, L1: 5.63E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.67E+00,]    Train :: Epoch: 10/10:   2%|▏         | 8/391 [00:07<05:36,  1.14it/s, s=MSE: 6.56E-03, L1: 5.92E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.41E-02, KLG: 4.81E+00,]    Train :: Epoch: 10/10:   2%|▏         | 9/391 [00:07<05:38,  1.13it/s, s=MSE: 6.56E-03, L1: 5.92E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.41E-02, KLG: 4.81E+00,]    Train :: Epoch: 10/10:   2%|▏         | 9/391 [00:08<05:38,  1.13it/s, s=MSE: 6.34E-03, L1: 5.80E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.48E+00,]    Train :: Epoch: 10/10:   3%|▎         | 10/391 [00:08<05:40,  1.12it/s, s=MSE: 6.34E-03, L1: 5.80E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.35E-02, KLG: 4.48E+00,]    Train :: Epoch: 10/10:   3%|▎         | 10/391 [00:09<05:40,  1.12it/s, s=MSE: 6.29E-03, L1: 5.72E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.39E-02, KLG: 4.72E+00,]    Train :: Epoch: 10/10:   3%|▎         | 11/391 [00:09<05:42,  1.11it/s, s=MSE: 6.29E-03, L1: 5.72E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.39E-02, KLG: 4.72E+00,]    Train :: Epoch: 10/10:   3%|▎         | 11/391 [00:10<05:42,  1.11it/s, s=MSE: 5.79E-03, L1: 5.47E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.59E+00,]    Train :: Epoch: 10/10:   3%|▎         | 11/391 [00:10<05:46,  1.10it/s, s=MSE: 5.79E-03, L1: 5.47E-02, , RB: 5.89E+06, RT: 6.45E+00, , MV: 1.37E-02, KLG: 4.59E+00,]




.. GENERATED FROM PYTHON SOURCE LINES 189-192

Visualize results
-----------------------------------------------
Performs the inference :math:`\tilde{\mathbf{x}} = \mathcal{G}_{\theta^*}( \mathbf{H}_{\phi^*}\mathbf{x})` and visualize the results.

.. GENERATED FROM PYTHON SOURCE LINES 192-228

.. code-block:: Python


    x_est = model(sample.to(device)).cpu()
    y = acquisition_model(sample.to(device)).cpu()

    if adquistion_name == 'spc':
        y = y.reshape(y.shape[0], -1, n_measurements_sqrt, n_measurements_sqrt)

    img      = make_grid(sample[:16], nrow=4, padding=1, normalize=True, scale_each=False, pad_value=0)
    img_est  = make_grid(x_est[:16], nrow=4, padding=1, normalize=True, scale_each=False, pad_value=0)
    img_y    = make_grid(y[:16], nrow=4, padding=1, normalize=True, scale_each=False, pad_value=0)

    imgs_dict = {
        "CIFAR10 dataset": img, 
        f"{adquistion_name.upper()} measurements": img_y,
        "Recons CIFAR10": img_est
    }

    plt.figure(figsize=(14, 2.7))

    for i, (title, img) in enumerate(imgs_dict.items()):
        plt.subplot(1, 4, i+1)
        plt.imshow(img.permute(1, 2, 0))
        plt.title(title)
        plt.axis('off')

    ca = acquisition_model.learnable_optics.cpu().detach().numpy().squeeze()
    if adquistion_name == 'spc':
        ca = ca = ca.reshape(n_measurements, 32, 32, 1)[0]
    elif adquistion_name == 'c_cassi':
        ca = ca.transpose(1, 2, 0)
    plt.subplot(1, 4, 4)
    plt.imshow(ca, cmap='gray')
    plt.axis('off')
    plt.title('Learned CA')
    plt.colorbar()

    plt.show()


.. image-sg:: /auto_examples/images/sphx_glr_demo_colibri_003.png
   :alt: CIFAR10 dataset, C_CASSI measurements, Recons CIFAR10, Learned CA
   :srcset: /auto_examples/images/sphx_glr_demo_colibri_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-3.1909246..3.4660864].





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 44.616 seconds)


.. _sphx_glr_download_auto_examples_demo_colibri.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: demo_colibri.ipynb <demo_colibri.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: demo_colibri.py <demo_colibri.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
